import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime
import threading
import time
import sqlite3

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7528011013:AAEJgDZPlDX0otvtwq1nD2n5YMxYcWidLQI"

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞
bot_faol = True

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('bot_data.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS admins (
    id INTEGER PRIMARY KEY,
    user_id INTEGER NOT NULL,
    date_added TEXT NOT NULL
)''')

cursor.execute('''CREATE TABLE IF NOT EXISTS groups (
    id INTEGER PRIMARY KEY,
    group_id INTEGER NOT NULL
)''')

cursor.execute('''CREATE TABLE IF NOT EXISTS ads (
    id INTEGER PRIMARY KEY,
    media_type TEXT,
    media_file_id TEXT,
    text TEXT,
    group_ids TEXT,
    date_created TEXT NOT NULL
)''')

conn.commit()

# ID –∞–¥–º–∏–Ω–∞ (Admin IDlarini yangiladim)
ADMIN_IDS = [7821399237, 7297970875, 52825051]  # –û'–∑–≥–∞—Ä—Ç–∏—Ä–¥–∏–º, –±—É –µ—Ä–¥–∞ 3 —Ç–∞ –∞–¥–º–∏–Ω ID

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
admins = ADMIN_IDS  # Endi 3 ta admin ID ishlatilmoqda

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã
current_ad = {"media": None, "text": None}

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_admin_to_db(user_id):
    cursor.execute('INSERT INTO admins (user_id, date_added) VALUES (?, ?)', (user_id, str(datetime.now())))
    conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_group_to_db(group_id):
    cursor.execute('INSERT INTO groups (group_id) VALUES (?)', (group_id,))
    conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def save_ad_to_db(media_type, media_file_id, text, group_ids):
    cursor.execute('INSERT INTO ads (media_type, media_file_id, text, group_ids, date_created) VALUES (?, ?, ?, ?, ?)',
                   (media_type, media_file_id, text, ','.join(map(str, group_ids)), str(datetime.now())))
    conn.commit()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        KeyboardButton("üì¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–ª–∞–º—É"),
        KeyboardButton("‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞"),
        KeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º—É"),
        KeyboardButton("‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã"),
        KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
        KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É")
    )
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã
def time_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        KeyboardButton("1 —á–∞—Å"),
        KeyboardButton("2 —á–∞—Å–∞"),
        KeyboardButton("3 —á–∞—Å–∞"),
        KeyboardButton("4 —á–∞—Å–∞"),
        KeyboardButton("5 —á–∞—Å–æ–≤")
    )
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=admin_keyboard())
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
def add_admin(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        bot.register_next_step_handler(message, check_user_id)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ID –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def check_user_id(message):
    try:
        user_id = int(message.text)
        if user_id not in admins:
            admins.append(user_id)
            add_admin_to_db(user_id)
            bot.send_message(user_id, "–í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∞.")
            bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
        else:
            bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É"
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É")
def add_group(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
        bot.register_next_step_handler(message, receive_group_id)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è ID –≥—Ä—É–ø–ø—ã
def receive_group_id(message):
    try:
        group_id = int(message.text)
        add_group_to_db(group_id)
        bot.send_message(message.chat.id, f"–ì—Ä—É–ø–ø–∞ —Å ID {group_id} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –≥—Ä—É–ø–ø—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–ª–∞–º—É"
@bot.message_handler(func=lambda message: message.text == "üì¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–ª–∞–º—É")
def setup_ad(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ).")
        bot.register_next_step_handler(message, receive_media)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–¥–∏–∞
def receive_media(message):
    if message.content_type in ['photo', 'video', 'audio']:
        current_ad["media"] = message
        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–µ–∫–ª–∞–º—ã.")
        bot.register_next_step_handler(message, receive_text)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª.")
        bot.register_next_step_handler(message, receive_media)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã
def receive_text(message):
    current_ad["text"] = message.text
    bot.send_message(message.chat.id, "–†–µ–∫–ª–∞–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=admin_keyboard())

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    save_ad_to_db(message.content_type, message.file_id if message.content_type != 'text' else None, current_ad["text"], [group[0] for group in cursor.execute('SELECT group_id FROM groups').fetchall()])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ë—ã—Å—Ç—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞"
@bot.message_handler(func=lambda message: message.text == "‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞")
def quick_send(message):
    if message.from_user.id in admins:
        if current_ad["media"] and current_ad["text"]:
            media = current_ad["media"]
            text = current_ad["text"]
            for group_id in [group[0] for group in cursor.execute('SELECT group_id FROM groups').fetchall()]:
                try:
                    if media.content_type == 'photo':
                        bot.send_photo(group_id, media.photo[0].file_id, caption=text)
                    elif media.content_type == 'video':
                        bot.send_video(group_id, media.video.file_id, caption=text)
                    elif media.content_type == 'audio':
                        bot.send_audio(group_id, media.audio.file_id, caption=text)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –≥—Ä—É–ø–ø—É {group_id}: {e}")
                    continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥—Ä—É–ø–ø–µ
            bot.send_message(message.chat.id, "–†–µ–∫–ª–∞–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        else:
            bot.send_message(message.chat.id, "–†–µ–∫–ª–∞–º–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∫–ª–∞–º—É.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º—É"
@bot.message_handler(func=lambda message: message.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º—É")
def delete_ad(message):
    if message.from_user.id in admins:
        current_ad["media"] = None
        current_ad["text"] = None
        bot.send_message(message.chat.id, "–†–µ–∫–ª–∞–º–∞ —É–¥–∞–ª–µ–Ω–∞!")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã"
@bot.message_handler(func=lambda message: message.text == "‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã")
def set_time(message):
    if message.from_user.id in admins:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏:", reply_markup=time_keyboard())
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã
@bot.message_handler(func=lambda message: message.text in ["1 —á–∞—Å", "2 —á–∞—Å–∞", "3 —á–∞—Å–∞", "4 —á–∞—Å–∞", "5 —á–∞—Å–æ–≤"])
def set_time_interval(message):
    if message.from_user.id in admins:
        time_interval = message.text
        bot.send_message(message.chat.id, f"–†–µ–∫–ª–∞–º–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ {time_interval}.")
        interval_in_hours = int(time_interval.split()[0])
        threading.Thread(target=send_ad_periodically, args=(interval_in_hours,)).start()
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º—ã –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
def send_ad_periodically(interval_in_hours):
    while bot_faol:
        if current_ad["media"] and current_ad["text"]:
            media = current_ad["media"]
            text = current_ad["text"]
            for group_id in [group[0] for group in cursor.execute('SELECT group_id FROM groups').fetchall()]:
                try:
                    if media.content_type == 'photo':
                        bot.send_photo(group_id, media.photo[0].file_id, caption=text)
                    elif media.content_type == 'video':
                        bot.send_video(group_id, media.video.file_id, caption=text)
                    elif media.content_type == 'audio':
                        bot.send_audio(group_id, media.audio.file_id, caption=text)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –≥—Ä—É–ø–ø—É {group_id}: {e}")
                    continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥—Ä—É–ø–ø–µ
        time.sleep(interval_in_hours * 3600)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–µ–∫—É–Ω–¥—ã

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
